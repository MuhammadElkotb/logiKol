/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package logikol;


import Gates.AND;
import Gates.BasicGate;
import Gates.NOT;
import Gates.OR;
import Gates.Source;
import UIObjects.IONode;
import UIObjects.InputObject;
import Gates.CompoundGate;
import Gates.Input;
import Gates.BasicGateMultiIn;
import Gates.BasicGateSingleIn;

import javafx.application.Application;
import javafx.stage.Stage;
import javafx.scene.control.Button;
import javafx.scene.effect.Effect;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseButton;
import javafx.scene.input.MouseEvent;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.canvas.Canvas;
import javafx.scene.layout.*;
import javafx.scene.paint.Color;
import javafx.scene.paint.Paint;

import javafx.scene.shape.Circle;

public class App extends Application {

    int width = 1280;
    int height = 720;

    @Override
    public void start(Stage stage) {

        Group root = new Group();

        Input input1 = new Input(false);
        Input input2 = new Input(true);

        System.out.println("lol");

        IONode outNode1 = new IONode(root);
        IONode outNode2 = new IONode(root);

        System.out.println(outNode1);

        InputObject input1UI = new InputObject(root, input1, outNode1, 50, 70);
        InputObject input2UI = new InputObject(root, input2, outNode2, 200, 300);

        Image imageAND = new Image("gates3-and.png");
        Image imageOR = new Image("gates3-or.png");
        Image imageNOT = new Image("gates3-not.png");


        ImageView imageViewAND = new ImageView(imageAND);
        ImageView imageViewOR = new ImageView(imageOR);
        ImageView imageViewNOT = new ImageView(imageNOT);


        imageViewNOT.setOnMouseDragged(e -> {
            imageViewNOT.setX(e.getSceneX() - imageNOT.getWidth() / 2);
            imageViewNOT.setY(e.getSceneY() - imageNOT.getHeight()/ 2);
        });

        imageViewOR.setOnMouseDragged(e -> {
            imageViewOR.setX(e.getSceneX() - imageOR.getWidth() / 2);
            imageViewOR.setY(e.getSceneY() - imageOR.getHeight() / 2);
        });

        imageViewAND.setOnMouseDragged(e -> {
            imageViewAND.setX(e.getSceneX() - imageAND.getWidth() / 2);
            imageViewAND.setY(e.getSceneY() - imageAND.getHeight() / 2);
        });


        Scene scene = new Scene(root, width, height);
        scene.setFill(Color.WHITE);
        stage.setScene(scene);

        root.getChildren().addAll(imageViewAND, imageViewNOT, imageViewOR);
        
       
        stage.show();
    }

    public static void main(String[] args) {
        launch();
        

    }
}
