/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package logikol;


import Gates.AND;
import Gates.BasicGate;
import Gates.NOT;
import Gates.OR;
import Gates.Source;
import Gates.CompoundGate;
import Gates.Input;
import Gates.BasicGateMultiIn;
import Gates.BasicGateSingleIn;

import javafx.application.Application;
import javafx.stage.Stage;
import javafx.scene.control.Button;
import javafx.scene.input.MouseButton;
import javafx.scene.input.MouseEvent;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.canvas.Canvas;
import javafx.scene.layout.*;
import javafx.scene.paint.Color;
import javafx.scene.paint.Paint;

import javafx.scene.shape.Circle;

public class App extends Application {

    int width = 1280;
    int height = 720;

    @Override
    public void start(Stage stage) {

        Group root = new Group();
        Circle circle = new Circle(50, 50, 15);
        circle.setFill(Color.GREEN);
        root.getChildren().add(circle);
        Scene scene = new Scene(root, width, height);
        scene.setFill(Color.WHITE);
        stage.setScene(scene);

        scene.setOnMouseMoved(e -> {
            circle.setFill(Color.BLACK);
            circle.setCenterX(e.getSceneX());
            circle.setCenterY(e.getSceneY());
        });
        
        stage.show();
    }

    public static void main(String[] args) {
        launch();
        Input input1 = new Input(false);
        Input input2 = new Input(true);
        BasicGateMultiIn and1 = new AND(input1, input2);
        BasicGateMultiIn or = new OR(input1, input2);
        BasicGateSingleIn not = new NOT(and1);
        BasicGateMultiIn and2 = new AND(or, not);

        BasicGateSingleIn node = new Source(and2);
        System.out.println(node.process());
        
        input1.setValue(true); input2.setValue(false);
        and1.reset(); and2.reset(); or.reset(); not.reset();
        System.out.println(node.process());

        input1.setValue(true); input2.setValue(true);
        and1.reset(); and2.reset(); or.reset(); not.reset();
        System.out.println(node.process());

        input1.setValue(false); input2.setValue(false);
        and1.reset(); and2.reset(); or.reset(); not.reset();
        System.out.println(node.process());

    }
}
